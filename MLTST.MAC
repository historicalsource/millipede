	.TITLE MLTST-MILLIPEDE SELF TEST
	.NLIST
	.INCLUDE MLDEF
	.LIST
	.CSECT	MLTST


	.SBTTL	BONUSS-GET MAX STARTING BONUS SCORES FOR SELECT MODE
;
;ENTRY	(OPTNS1)=OPTION SWITCH SETTINGS
;	(OPTNS2)=OPTION SWITCH SETTINGS
;EXIT	(X)=INDEX INTO "BONUSV" TABLE
;	(A)=LSB OF BONUS LEVEL NEEDED
BONUSS:	LDX I,8
	LDA OPTNS1
	BMI 90$			;IF NO SELECT MODE
	AND I,30
	EOR OPTNS2
	AND I,30
	EOR OPTNS2
	AND I,3C
	LSR
	ADC I,08		;SKIP OVER OTHER ENTRIES
	TAX
	LDA X,BONUSV
90$:	RTS

BONUSV:	.WORD 120,150,200,200	;*100 FOR BONUS LEVEL
				;THE LAST ENTRY ABOVE IS REALLY 0
	.WORD 0,120,240,360	;TABLE OF MAX STARTING VALUES FOR "LSCORE"
	.WORD 0,150,300,450
	.WORD 0,200,400,600
	.WORD 0,200,400,600


	.SBTTL	CKSUM-CHECKSUM EAROM
;
;EXIT	(EACKSM)=NEW CHECKSUM
;	(A)=DIFFERENCE BETWEEN OLD & NEW CHECKSUM
;	(Y)=OLD CHECKSUM
;USES	A,Y
CKSUM:	LDY I,EACKSM-EAROM-1
	LDA I,0FF		;STARTING PATTERN
	CLC
10$:	ADC Y,EAROM		;1'S COMPLEMENT CHECKUM
	DEY
	BPL 10$
	LDY EACKSM
	STA EACKSM		;SAVE NEW CHECKSUM
	TYA
	EOR EACKSM		;COMPARE WITH CURRENT CHECKSUM
	RTS


	.SBTTL	CHKEA-CHECK EAROM INTEGRITY
;
; THIS ROUTINE SHOULD BE GIVEN AT
; LEAST 100 MS AFTER POWER UP TO
; GIVE 30 V TO SETTLE FOR EAROM
;
CHKEA:	LDX I,6*NSCORE-1
20$:	LDA X,99$		;SEED HIGH SCORE TABLE
	STA X,HSCORE
	DEX
	BPL 20$
	JSR CKSUM		;CHECKSUM EAROM
	BNE 30$			;INVALID DATA IN EAROM
	LDA OPTNS1		;GET BONUS LEVEL AND NUMBER OF LIVES AND DIFFICULTY
	CMP EAOPTS
	STA EAOPTS		;SAME NEW SETTINGS
	BNE 28$			;DIFFERENT OPTION SETTINGS IGNORE HIGH SCORES
	LDA EAROM+2
	BEQ 30$			;IF HIGH SCORE IS BAD (IT MUST BE >16K)
	LDX I,08		;ASSUMING A GAME WILL NOT BE FINISHED AND
24$:	LDA X,EAROM		;BE ON THE HIGH SCORE TABLE WITHIN 8 SECONDS
	STA X,HSCORE
	CMP I,9A
	BCS 30$			;INVALID SCORE
	AND I,0F
	CMP I,0A
	BCS 30$			;INVALID SCORE
	LDA X,EAROM+9
	STA X,INITL		;UPDATE SCORES AND INITIALS
	DEX
	BPL 24$
28$:	RTS

30$:	LDA I,0
	LDX I,EACKSM-EAROM
35$:	STA X,EAROM		;CLEAR EAROM BUFFER
	DEX
	BPL 35$
	LDA OPTNS1		;BONUS LEVEL, NUMBER OF LIVES AND DIFFICULTY
	STA EAOPTS		;SET OPTION SETTINGS
	RTS

99$:	.BYTE 75,91,8		;INITIAL SCORES
	.BYTE 54,82,8
	.BYTE 30,78,8
	.BYTE 20,65,8
	.BYTE 78,54,7
	.BYTE 84,30,6
	.BYTE 27,22,5
	.BYTE 16,19,4
	.BYTE 2,2,0D		;BBM - INITIAL SET OF INITIALS
	.BYTE 6,18,0C		;FXL
	.BYTE 0D,5,3		;MEC
	.BYTE 5,4,0		;ED
	.BYTE 4,15,7		;DUG
	.BYTE 4,3,2		;DCB
	.BYTE 4,5,17		;DEW
	.BYTE 4,6,17		;DFW

	.SBTTL	INITEA-INITIALIZE FROM EAROM
;
;	THIS ROUTINE MUST NOT BE INTERRUPTED OTHERWISE
;	THE TIMING PULSES MAY CAUSE THE EA ROM TO BE MISREAD.
;
INITEA:	LDX I,EACKSM-EAROM		;READ ALL OF THE EAROM
10$:	JSR READEA		;READ EA ROM LOCATION
	STA X,EAROM
	DEX
	BPL 10$			;READ IT ALL NOW
	STX ROMA		;STOP ANY EAROM REQUESTS
	RTS


	.SBTTL	READEA-READ EA ROM
;
;THIS ROUTINE ASSUMES THAT NO IRQ/NMI
;INTERRUPTS WILL OCCUR OTHERWISE THE RESULTS
;ARE INDETERMINATE.
;
;ENTRY	(X)=ADDRESS TO READ (0 TO 63.)
;EXIT	(A)=VALUE READ FROM EA ROM
;USES	A,Y
READEA:	STA X,EAADDR		;SET ADDRESS LATCH (WRITE DECODED)
	LDY I,8
	STY EACTRL		;SET READ MODE AND ENABLE CHIP
	INY			;Y=9
	STY EACTRL		;ENABLE CLOCK
	DEY			;Y=8
	STY EACTRL		;DISABLE CLOCK-DATA IN 2 US
	LDY I,0
	LDA EAREAD		;READ DATA-4 CYCLES AT 1.5MHZ >2 US
	STY EACTRL		;DESELECT CHIP WITHIN 24 US
	RTS


	.SBTTL	WRITEA-WRITE DATA TO EAROM
;
;ENTRY	(ROMA)=CURRENT EAROM ADDRESS (0-63.)
;	(ROMC)=CURRENT OPERATION (0=COMPARE, 1=WRITE DATA)
;	(FRAME)=FRAME COUNT INCREMENTED EVERY 16 MS
;EXIT	(ROMA)=UPDATED TO NEXT LOCATION TO WRITE
;	(ROMC)=1=TO WRITE DATA, 0=CONTINUE COMPARE
WRITEA:	LDA FRAME
	AND I,3
	BNE 10$			;EVERY 64 MS CHECK EAROM
	STA EACTRL		;DISABLE EAROM
	LDX ROMA
	BMI 10$			;ALL DONE
	LSR ROMC
	BCC 20$			;COMPARE NEXT LOCATION-JUST FINISHED A WRITE
	LDA I,2			;WRITE DATA CURRENTLY LATCHED
	STA EACTRL
	LDA I,0A
	STA EACTRL		;ENABLE CHIP AND START
	DEC ROMA		;MOVE TO NEXT ADDRESS FOR COMPARE
10$:	RTS

20$:	SEI			;DISABLE IRQ
25$:	JSR READEA		;READ EA ROM
	CMP X,EAROM
	BNE 30$			;DATA IS NOT THE SAME
	DEX
	BPL 25$			;READ NEXT LOCATION
	CLI
	STX ROMA		;NO FURTHER COMPARES.
	RTS			;CLEAR CHIP ENABLE IN 64 MS

30$:	CLI			;ENABLE IRQ'S AGAIN
	STX ROMA		;RESET WHERE WE LEFT OFF
	LDA I,6
	STA EACTRL		;DESELECT CHIP AND SET ERASE MODE
	LDA X,EAROM
	STA X,EAADDR		;SET DATA AND ADDRESS LATCH
	LDA I,0E
	STA EACTRL		;ENABLE CHIP AND START ERASE
	INC ROMC		;SET TO WRITE NEXT TIME THRU
	RTS


	.SBTTL RESET-POWER-ON RESET
RESET:	SEI			;DISABLE IRQ FOR EASE OF USE ON DEVELOPMENT SYSTEM
	CLD
	LDX I,0FF
	TXS			;SET STACK POINTER
	INX
	TXA
10$:	STA ZX,0		;CLEAR ZERO PAGE
	STA X,100		;CLEAR PAGE ONE
	STA X,200
	STA X,300
	STA X,PLYFLD
	STA X,PLYFLD+100
	STA X,PLYFLD+200
	STA X,PLYFLD+300
	DEX
	BNE 10$			;LEAVE WITH X=0
	STA SKCTL0		;INITIALIZE POKEY
	STA SKCTL1
	STA ACTL0
	STA ACTL1
	LDX I,07
20$:	STA X,AUDF0		;TURN OFF SOUNDS
	STA X,AUDF1
	STA X,CCNTR		;TURN OFF COIN COUNTERS, VIDEO ROTATE,
	DEX			;TURN ON LEDS, PLAYER 1 CONTROLS
	BPL 20$

	.SBTTL	MEMORY TEST
MEMTST:	LDX I,7			;SET UP COLORS
10$:	LDA X,COLORS
	STA X,ANCOL		;FOR ALPHANUMERICS AND MOTION OBJECTS
	STA X,MOCOL
	LDA X,COLORS+8
	STA X,ANCOL+8
	STA X,MOCOL+8
	DEX
	BPL 10$
	LDX I,0
20$:	LDA X,0
	BNE 70$			;NON ZERO=ERROR
	LDA I,11
30$:	STA X,0			;WRITE OUT TEST PATTERN
	TAY
	EOR X,0
	BNE 70$			;NOT THE SAME-ERROR
	TYA
	EOR I,0FF		;WRITE MORE THAN 1 BIT
	STA X,0			;THIS CAUSES SOME RAM'S TO FAIL
	EOR X,0
	BNE 70$			;IF AN ERROR OCCURED
	TYA
	ASL
	BCC 30$			;SHIFT PATTERN
	INX
	BNE 20$			;NEXT LOCATION
	STA WTCHDG		;NOT NOW
	TXA
	STA TEMP1
	ROL			;START AT ADDRESS 100
35$:	STA TEMP1+1		;USE ZERO PAGE FOR REST OF MEM TEST
	LDY I,0
40$:	LDX I,11		;CURRENT PATTERN
	LDA NY,TEMP1
	BNE 80$			;AN ERROR-MUST START ZERO
45$:	TXA
	STA NY,TEMP1		;WRITE TO LOCATION
	EOR NY,TEMP1		;COMPARE IT
	BNE 80$			;OR ERROR
	TXA			;AS ABOVE WRITE MORE THAN 1 BIT
	EOR I,0FF
	STA NY,TEMP1
	EOR NY,TEMP1
	BNE 80$			;IF AN ERROR OCCURED
	TXA
	ASL
	TAX
	BCC 45$			;NEXT PATTERN
	INY
	BNE 40$			;NEXT LOCATION TO TEST
	STA WTCHDG		;NOT NOW
	INC TEMP1+1
	LDA TEMP1+1
	CMP I,4			;TEST 4 PAGES STARTING WITH ZERO PAGE
	BNE 50$			;TRY PLAYFIELD RAM
	LDA I,PLYFLD/100
50$:	CMP I,PLYFLD+400/100
	BCC 35$			;NEXT PAGE TO TEST
	JMP STEST1

70$:	CMP I,10		;CARRY CLEAR=D0-D3 IN ERROR ELSE D4-D7 IN ERROR
	LDA I,0
	BPL 85$			;ALWAYS

80$:	LDX TEMP1+1
	CPX I,PLYFLD/100
	BCC 70$			;MUST BE WITHIN ONE OF TWO 2114'S
	TAX
	TYA			;THE 2101'S ARE ORGANIZED BY BLOCKS OF
	AND I,30		;16 BYTES EACH ALTERNATING EVERY
	LSR			;4*16 BYTES
	LSR
	LSR
	LSR			;CLEARS CARRY
	ADC I,1			;1=FIRST PAIR, 2=SECOND PAIR, ETC
	CPX I,10		;DETERMINE LSB OR MSB
85$:	ROL			;NUMBER OF GOOD CHIPS BEFORE ERROR
	TAY
	LDA I,40		;SAME FREQUENCY
	STA AUDF0
	LDX I,07
	STX SKCTL0		;TURN ON POKEY
RAMBAD:	LDX I,10
	LDA I,0AF
	STA AUDC0		;PURE TONE VOLUME ON
5$:	BIT VBLANK
	BVC 5$			;WAIT UNTIL VBLANK STARTS
10$:	BIT VBLANK
	BVS 10$			;WAIT UNTIL VBLANK ENDS
	STA WTCHDG
	DEX
	BNE 5$			;COUNT DOWN VBLANK'S
	STX AUDC0		;TURN OFF SOUNDS
	LDX I,10
15$:	BIT VBLANK
	BVC 15$			;WAIT UNTIL VBLANK STARTS
20$:	BIT VBLANK
	BVS 20$			;WAIT UNTIL VBLANK ENDS
	STA WTCHDG
	DEX
	BNE 15$			;COUNT DOWN VBLANK'S
	DEY
	BPL RAMBAD		;LOOP DESIRED NUMBER OF TIMES
STOP:	LDA SLFTST
	BPL STOP		;WAIT UNTIL SEFTST SW IS PUSHED
10$:	BMI 10$			;START ALL OVER W/WATCHDOG


	.SBTTL	INITIALIZE FOR START OF ATTRACT
STEST1:	LDA I,0
	TAX
60$:	STA X,0			;CLEAR MEMORY AGAIN
	STA X,100
	STA X,200
	STA X,300
	DEX
	BNE 60$
	DEX			;X=-1
	STX MODE
	STX UPDFLG
	STX UPDFLG+1
	LDA SLFTST
	BPL TVTEST		;SELF-TEST
	LDA I,7
	STA SKCTL0		;TURN ON POKEY
	STA SKCTL1
	STA POTGO0
	LDA OPTSW0		;READ OPTION SWITCHS
	STA OPTNS1
	STA POTGO1
	LDA OPTSW1
	STA $CMODE
	LDA I,0
	JSR TBINIT		;READ OPTION BANK 2 AND INITIALIZE TRACKBALL
	JSR SELEC4		;SET BONUS VALUE
	JSR INITEA		;READ EAROM
	JSR CHKEA		;CHECK EAROM CONTENTS
	JMP MAIN		;ELSE GO TO GAME MODE

	.SBTTL	TV MONITOR ADJUSTMENT TEST
TVTEST:	LDA $COINA
	AND I,20
	BEQ 3$
	JMP PATSCN		;IF LEFT COIN IS NOT ON CONTINUE SELF TEST

3$:	TAX			;X=0
4$:	STA X,0			;PREVENT SOFTWARE WATCHDOG,
	INX			;SLAM ABUSE ALARM AND
	BNE 4$			;COIN COUNTERS
	LDX I,15.
5$:	STA X,MOBJV		;REMOVE MOTION OBJECTS
	DEX
	BPL 5$
	LDA I,PLYFLD+3BF/100
	STA TEMP1+1
	LDY I,PLYFLD+3BF&0FF
	LDA I,BLK+3+80
12$:	LDX I,4
14$:	STA NY,TEMP1
	DEY
	DEX
	BNE 14$			;DO 1/8 OF SCREEN
	SEC
	SBC I,01
	CMP I,BLK+0BF
	BEQ 15$
	CMP I,BLK+80
	BCS 12$			;DO NEXT 1/8 OF SCREEN
	CMP I,BLK+7F
	BCC 16$			;IF NOT ON THE UPPER HALF
15$:	SBC I,7C
16$:	CMP I,BLK+3F
	BEQ 17$			;IF BOTTOM OF SCREEN
	CMP I,BLK
	BCS 12$			;NOT DONE WITH LOWER HALF
17$:	CLC
	ADC I,84		;RESET TO HIGH COLOR BANKS
	CPY I,3F
	BNE 18$			;NOT SWITCHING COLOR BANKS
	EOR I,40		;SWAP COLOR BANKS
18$:	CPY I,0FF
	BNE 12$			;NOT CROSSING PAGE BOUNDARY
	PHA
	DEC TEMP1+1
	LDA TEMP1+1
	CMP I,PLYFLD/100
	PLA
	BCS 12$			;DO NEXT PAGE
	CLI			;START INTERRUPTS
20$:	LDA SLFTST		;TEMP1=0 ON ENTRY
	BMI 20$			;IF NOT IN SELF TEST LET WATCHDOG RESET US
	LSR SYNC		;DO NOT LET IRQ HANG US WITH SOFTWARE WATCHDOG
	BCC 20$			;WAIT FOR VBLANK
	STA WTCHDG
	LDA FIRE1
	AND I,10
	CMP I,10
	ROL SDBNCE		;DEBOUNCE PLAYER 1 FIRE
	LDA SDBNCE
	AND I,1F
	CMP I,18		;2 FRAMES OFF, 3 ON
	BNE 25$			;NOT NOW
	CLC
	LDA GRNGUN
	ADC I,8			;CHANGE GREEN GUN COLORS
	AND I,18
	STA GRNGUN
25$:	LDA $COINA
	CMP I,0E0		;D5-D7=COIN SWITCHES
	ROL TEMP1
	LDA TEMP1
	AND I,1F
	EOR I,18		;LOOK FOR OFF TO ON TRANSITION
	BNE 20$			;WAIT FOR NEXT TEST
	LDA I,DOT
	SEI			;NO MORE COLOR BARS
30$:	STA X,PLYFLD		;SET UP DOT PATTERN THRU PLAYFIELD
	STA X,PLYFLD+100
	STA X,PLYFLD+200
	CPX I,0C0
	BCS 35$			;KEEP MOTION OBJECTS OFF THE SCREEN
	STA X,PLYFLD+300
35$:	INX
	BNE 30$
	STX ANCOL+1		;WHITE DOTS
	DEX			;X=FF
	STX ANCOL		;BLACK BACKGROUND
40$:	LDA SLFTST
	BMI 40$			;IF NOT IN SELF TEST WAIT FOR WATCHDOG
	STA WTCHDG
	BPL 40$			;ALWAYS

90$:	.BYTE 0,BLK,BLK+1,BLK+2


	.SBTTL	PATTERN SCREEN
PATSCN:	LDX I,0
1$:	DEX
	LDA I,0
	STA AX,PLYFLD		;CLEAR REST OF PLAYFIELD
	STA AX,PLYFLD+100
	STA AX,PLYFLD+200
	TXA
	STA AX,PLYFLD+2C0
	BNE 1$
	DEX			;X=-1
	STX COLCNT		;NO COLOR BARS
	STX INPUT+6		;TO TEST POLYCOUNTER
	STX INPUT+9		;TEST SECOND POKEY
	LDX I,0F
10$:	TXA
	ORA I,80
	STA X,MOBJH		;PUT MOTION OBJECTS IN MIDDLE
	STA X,MOBJV		;MOTION OBJECT PICTURES SET TO 0 BY CLEARING ZERO PAGE
	TXA
	AND I,0C
	ASL
	ASL
	ASL
	ASL
	ORA I,39
	STA X,MOBJC		;SET COLOR BANK
	DEX
	BPL 10$
	LDX I,03
20$:	LDA X,COLORS
	STA X,STCOL
	DEX
	BPL 20$			;SET UP COLORS IN "STCOL"


	.SBTTL	ROM TEST
ROMTST:	LDX I,0			;PROG STARTS ON EVEN PAGE BOUNDARY
	STX TEMP1		;LOW ADDRESS PTR
	LDA I,PROG&0FF00/100	;HIGH BYTE OF PROG ADDR
	STA TEMP1+1		;HIGH ADDRESS PTR
	LDX I,63.		;64 PAGES = 16K
	LDA I,0FF		;STARTING TEST PATTERN
10$:	LDY I,0
	STX A,WTCHDG		;MUZZLE DOG
1$:	EOR NY,TEMP1		;LONGITUDINAL PARITY
	INY
	BNE 1$			;LOOP FOR 1 PAGE
	TAY			;SAVE LRC
	TXA
	AND I,0F		;15 PAGES = 4K
	CMP I,1			;CLEAR CARRY IF END OF ROM
	TYA			;PUT LRC BACK
	BCS 3$			;SKIP IF IN ROM
	PHA			;ELSE SNAP FOR ANALYZER
	LDA I,0FF		;NEW STARTING PATTERN
3$:	INC TEMP1+1		;BUMP PTR
	DEX			;COUNT PAGES
	BPL 10$
	LDA I,PLYFLD/100	;DISPLAY CHECKSUMS
	STA TEMP4+1
	LDX I,4			;NUMBER OF CHECKSUMS
15$:	TXA
	EOR I,1F
	STA TEMP4		;STARTING ADDRESS FOR MESSAGE
	PLA
	BEQ 20$
	PHA
	LDA I,12
	JSR CHAR		;DISPLAY R
	TXA
	ORA I,20		;NUMBERS START AT 20
	JSR CHAR		;DISPLAY NUMBERS
	LDA I,0
	JSR CHAR		;BLANK
	PLA
	CLC
	JSR DIGIT2		;CHECKSUM IN ERROR
20$:	DEX
	BNE 15$			;DO ALL CHECKSUMS


	.SBTTL	EAROM ACCOUNTING COMPUTATIONS
EAROMC:	JSR INITEA		;READ IN EAROM CONTENTS
	LDY I,6
25$:	LDA Y,EAGAMS		;COPY EA ROM ACCOUNTING TO SCRATCH RAM
	STA Y,TEMP2+1		;SAVE IN TEMP2+1 THRU TEMP5
	DEY
	BPL 25$
	LDA TEMP3
	ORA TEMP3+1
	ORA TEMP2+1
	BEQ 45$			;LEAVE WITH GAME TIME=0
	INY
	SED
30$:	INY
	CPY I,0EF
	BEQ 40$			;OVERFLOW-LEAVE AT MAX
	LDA TEMP4		;SUBTRACT NUMBER OF GAMES
	SEC			;UNTIL TOTAL GAME TIME IS NEGATIVE
	SBC TEMP2+1		;NOTE THAT THE RESULT IS MODUL0 16 MINUTES
	STA TEMP4		;64 SECONDS = 1 MINUTE
	LDA TEMP4+1
	SBC TEMP3
	STA TEMP4+1
	LDA TEMP5
	SBC TEMP3+1
	STA TEMP5
	LDA TEMP5+1
	SBC I,0
	STA TEMP5+1
	BPL 30$			;IF NOT DONE
40$:	CLD
	TYA
	AND I,0F
	CMP I,0F
	TYA
	BCC 42$			;IF 60 SECONDS THEN ADD 1 TO MINUTES
	INY
42$:	LSR			;ADD 64 SECOND NIBBLE TO 4 SECOND NIBBLE BECAUSE
	LSR			;64 SECONDS=1 MINUTES + 4 SECONDS
	LSR
	LSR
	STY TEMP2
	CLC
	ADC TEMP2		;ADJUSTED MINUTES + SECONDS/4
	STA TEMP2
	AND I,0F
	CMP I,0F
	BCC 45$			;IF 60 SECONDS THEN ADD 1 TO MINUTES
	INC TEMP2
45$:	LDA RND0		;TEST POKEY FOR SELF TEST
	EOR RND0
	STA INPUT+8		;MUST BE ZERO ELSE POKEY IS BAD
	LDA RND1
	EOR RND1
	STA INPUT+11.		;MUST BE ZERO
	LDA I,7
	STA SKCTL0		;TURN ON POKEY
	STA SKCTL1
	LDA I,0
	JSR TBINIT		;INITIALIZE TRACKBALL AND OPTION SWITCH 2
	CLI			;ENABLE IRQ FOR MOTION OBJECTS

	.SBTTL	MAIN LOOP OF SELF TEST
;
;	STTMP2=WHICH AUDIO CHANNEL IS USED (0,2,4,6,8,A,C, OR E)
;	STTMP3=CURRENT MOTION OBJECT (0,2,4...,E)
;	(TEMP2)=AVERAGE GAME TIME
;	STCOL=BACKGROUND COLOR (CONTROLLED BY 1 PLAYER START)
;	STCOL+1=COLOR CONTROLLED BY 2 PLAYER START
;	STCOL+2=COLOR CONTROLLED BY REVERSE
;	STCOL+3=COLOR CONTROLLED BY FIRE
;	STCOL+4=CURRENT MOTION OBJECT PICTURE CODE
;
SFTEST:	LSR SYNC		;---
	BCC SFTEST		;WAIT FOR VBLANK
	LDA SLFTST
5$:	BMI 5$			;LET WATCHDOG RESET SELF TEST
	STA WTCHDG


	.SBTTL	PROCESS SWITCHES
	LDA START1
	TAX
	EOR I,0FF		;CHANGE 0=ON TO 1=ON
	AND INPUT+3		;1 FOR ALL SWITCHES GOING FROM OFF TO ON
	STX INPUT+3		;NEW SWITCH READINGS
	STA STTMP0		;SAVE STATE OF BUTTONS JUST PRESSED
	LDA START2
	TAX
	EOR I,0FF
	AND INPUT+4
	STX INPUT+4		;NEW SWITCH READINGS
	STA STTMP1		;SAVE STATE OF BUTTONS JUST PRESSED
	AND I,10
	BEQ 8$			;NO CHANGE IN PLAYER 2 FIRE
	LDA COCKSW		;TEST COCKTAIL CABINET INPUT
	AND I,20
	BNE 8$			;UPRIGHT ONLY
	LDA I,-1
	SEI			;STOP IRQ'S
	JSR TBINIT		;RESET TRACKBALL FOR PLAYER 2
	CLI			;RESTART IRQ'S
	INC STCOL+2		;NEW COLOR
	LDX STCOL+2
	LDY I,3
	JSR STCOLR		;SET COLORS
8$:	LDA STTMP0
	AND I,10
	BEQ 14$			;NO CHANGE IN PLAYER 1 FIRE
	LDA I,0
	SEI			;STOP IRQ'S
	JSR TBINIT		;RESET TRACKBALL FOR PLAYER 1
	CLI			;ENABLE IRQ'S
	INC STCOL+3
	LDX STCOL+3
	LDY I,2
	JSR STCOLR		;SET COLORS
14$:	LDA STTMP0		;D5=0=1 PLAYER START
	AND I,20
	BEQ 17$			;NO RELEASE OF SWITCH
	LDA STTMP2
	TAX
	CLC
	ADC I,02		;USE NEXT CHANNEL
	AND I,0E		;ONLY 8 CHANNELS
	STA STTMP2
	LDA I,0
	CPX I,08
	BCC 15$			;LOWER POKEY
	STA X,AUDC1-8
	BCS 16$			;ALWAYS

15$:	STA X,AUDC0		;TURN OFF OLD CHANNEL
16$:	INC STCOL+4
	LDA STCOL+4
	AND I,3F
	CMP I,0C
	BCC 50$			;IF NOT THE SECRET STAMP
	CMP I,0E
	BCS 50$			;IF NOT THE SECRET STAMP
	LDA INPUT+1
	EOR I,0FF
	ORA INPUT
	BEQ 50$			;IF OPTION SWITCHES ARE RIGHT
	LDA I,10		;USE
	CLC
	ADC STCOL+4
	BNE 52$			;ALWAYS

50$:	LDA STCOL+4
52$:	LDX I,0F
18$:	STA X,MOBJP		;SET NEW MOTION OBJECT PICTURE
	DEX
	BPL 18$
	INC STCOL		;NEW BACKGROUND COLORS
	LDX STCOL
	LDY I,0
	JSR STCOLR		;SET COLORS
17$:	LDA STTMP1
	AND I,20		;D5=0=2 PLAYER START
	BEQ 20$			;SWITCH WAS NOT JUST DEPRESSED
	INC STCOL+1
	LDX STCOL+1
	LDY I,1
	JSR STCOLR		;SET COLORS
	LDA STTMP3
	CLC
	ADC I,1
	AND I,0F		;THIS IS MOTION OBJECT INDEX
	STA STTMP3
20$:	LDA JOYSTK
	STA INPUT+5		;SAVE JOYSTICKS AND COIN SWITCHES


	.SBTTL	DISPLAY OPTION SWITCH SETTINGS
OPTION:	SEI
	STA POTGO0
	LDA OPTSW0		;WE MUST READ THIS RIGHT AWAY
	STA INPUT
	STA OPTNS1		;FOR "BONUSS"
	CLI
	AND I,01
	CLC
	ADC I,79.
	JSR MESS0		;DISPLAY "EASY/HARD SIDEFEED"
	LDA INPUT
	AND I,02
	LSR
	ADC I,81.
	JSR MESS0		;DISPLAY "EASY/HARD BEETLES"
	LDA INPUT
	AND I,0C
	LSR
	LSR
	ADC I,01		;2 THRU 5 LIVES
	STA TEMP1
	LDA I,PLYFLD+0F8/100	;DISPLAY NUMBER OF LIVES
	STA TEMP4+1
	LDA I,PLYFLD+0F8&0FF
	STA TEMP4
	LDX I,5			;LOOP COUNTER
30$:	LDA I,1F		;PICTURE CODE FOR PLAYERS PIECE
	BIT TEMP1
	BPL 35$			;IF MORE SHIPS
	LDA I,0			;CLEAR OLD SHIP IF SWITCH CHANGED
35$:	JSR CHAR		;DISPLAY A PICTURE OF PLAYERS PIECE
	DEC TEMP1
	DEX
	BNE 30$
	LDA I,PLYFLD+0F7/100
	STA TEMP4+1
	LDA I,PLYFLD+0F7&0FF
	STA TEMP4		;DISPLAY BONUS LEVEL
	LDA INPUT
	AND I,30
	LSR
	LSR
	LSR
	TAX
	CPX I,06
	BCC 36$			;IF NO BONUS LEVEL
	LDX I,8
36$:	LDA X,BONUSV+1
	SEC
	JSR DIGITZ		;DISPLAY DIGIT
	LDA X,BONUSV
	JSR DIGIT2		;DISPLAY 2 DIGITS
	LDA I,0
	JSR DIGIT2		;DISPLAY 2 DIGITS
	LDA INPUT
	AND I,40
	ASL
	ROL
	ROL
	ADC I,83.
	JSR MESS0		;DISPLAY "EASY/HARD SPIDER"
	LDA INPUT
	AND I,80
	ASL
	ROL
	ADC I,85.
	JSR MESS0		;DISPLAY "SELECT" OR BLANKS
	JSR BONUSS		;GET BONUS SELECT SETTING
	LDA X,BONUSV+1
	SEC
	JSR DIGIT2		;DISPLAY 2 DIGITS OR BLANKS
	LDA X,BONUSV
	JSR DIGIT2		;DISPLAY 2 DIGITS OR BLANKS
	LDA I,0
	JSR DIGIT2		;DISPLAY 2 DIGITS OR BLANKS
	LDA INPUT+2
	AND I,03
	CLC
	ADC I,87.
	JSR MESS0		;DISPLAY LANGUAGE
	LDA INPUT+2
	AND I,40
	ASL
	ROL
	ROL
	ADC I,72.
	JSR MESS0		;DISPLAY "2 CREDIT MIN" OR BLANK
	LDA I,PLYFLD+0FC&0FF	;DISPLAY MECH MULTIPLIERS
	STA TEMP4
	LDA I,PLYFLD+0FC/100
	STA TEMP4+1
	SEI
	STA POTGO1
	LDA OPTSW1		;WE MUST READ THIS RIGHT AWAY
	STA INPUT+1
	CLI
	AND I,10
	LSR
	LSR
	LSR			;CLEARS CARRY
	LSR
	ADC I,01		;1 OR 2
	ORA I,20
	JSR CHAR		;CENTER MECH MULTIPLIER (1 OR 2)
	LDA INPUT+1
	AND I,0C
	LSR
	LSR			;CLEARS CARRY
	BNE 40$			;IF NOT SET FOR UNIT COIN
	LDA I,-2
40$:	ADC I,3			;1,4,5, OR 6
	ORA I,20
	JSR CHAR		;DISPLAY MECH MULTIPLIER
	LDA I,PLYFLD+0FB&0FF
	STA TEMP4
	LDA I,PLYFLD+0FB/100
	STA TEMP4+1
	LDA INPUT+1
	LSR
	LSR
	LSR
	LSR
	LSR
	TAX
	LDA X,BONUSC		;GET BONUS COIN VALUE
	LSR
	LSR
	LSR
	LSR
	SEC			;ZERO SUPPRESS
	JSR DIGITZ		;DISPLAY THE DIGIT
	LDA I,0
	JSR CHAR		;ADD AN BLANK
	LDA X,BONUSC
	AND I,0F
	SEC			;SERO SUPPRESS
	JSR DIGITZ		;DISLAY BONUS COINS GIVEN
50$:	LDA INPUT+1
	AND I,0C3
	EOR I,0C0
	CMP I,1			;SET CARRY IF NOT DEMO MODE
	AND I,03		;COIN MODE
	ADC I,74.
	JSR MESS0		;DISPLAY COIN MODE


	.SBTTL	DISPLAY ALL INPUTS
INPUTS:	LDA RND0
	PHA
	AND INPUT+6		;CHECK SORTED BITS IN POKEY
	STA INPUT+6		;DISPLAY RANDOM NUMBERS
	PLA
	ORA INPUT+7		;CHECK FOR SHORTED BITS IN POKEY
	STA INPUT+7
	LDA RND1		;TEST OTHER POKEY TOO
	PHA
	AND INPUT+9
	STA INPUT+9
	PLA
	ORA INPUT+10.
	STA INPUT+10.
	LDX I,0			;CLR X
	LDA INPUT+3
	ORA I,0CF		;DO NOT COUNT UNUSED BIT
	SEC			;2 SWITCHES
	ROL
1$:	BCS 2$
	INX			;COUNT 0'S
2$:	ASL			;SHIFT TO NEXT SW
	BNE 1$			;IF THERE IS ONE
	LDA INPUT+4
	ORA I,0CF		;2 SWITCHES
	LSR
3$:	BCS 4$			;NOT SET
	INX
4$:	LSR
	BNE 3$			;IF NOT DONE
	LDA INPUT+5
	SEC
	ROR			;BE SURE TO GET THE LAST SWITCH
5$:	BCS 6$			;NOT ON
	INX
6$:	LSR
	BNE 5$			;DO ALL SWITCHES
	TXA			;X=NUMBER OF SWITCHES CLOSED (0 TO 12)
	LDY STTMP2
	ASL
	ASL
	ASL
	CPY I,08
	BCC 7$			;USE LOWER POKEY
	STA Y,AUDF1-8		;USE OTHER POKEY
	TXA
	ORA I,0A0
	STA Y,AUDC1-8
	BMI 8$			;ALWAYS

7$:	STA Y,AUDF0		;SET FREQUENCY BY NUMBER OF SWITCHES
	TXA
	ORA I,0A0		;SET VOLUME BY NUMBER OF SWITCHES
	STA Y,AUDC0
8$:	LDY I,5*32.+12.		;POSITION FOR 6 COLUMNS, UP 12 ROWS FROM THE BOTTOM
	LDX I,5			;DISPLAY 6 COLUMNS OF INPUTS
9$:	TXS
	LDX I,7
10$:	TXA
	TSX
	ROL X,INPUT
	TAX
	LDA I,21		;(='0')ASSUME OFF (HI)
	BCS 12$			;IF SWITCH OFF (1)
	LDA I,20		;THEN WRITE '1'
12$:	INY			;ASSUME STRAIGHT FORWARD
	STA Y,PLYFLD		;ONE COLUMN AWAY FROM EDGE
	DEX
	BPL 10$
	TSX
	ROL X,INPUT		;RESTORE "INPUT"
	TYA
	SEC
	SBC I,32.+8.
	TAY
	DEX
	BPL 9$
	TXS			;RESET STACK
	LDA I,PLYFLD/100
	STA TEMP4+1
	LDA I,PLYFLD+19&0FF
	STA TEMP4		;SET SCREEN ADDRESS FOR POKEY ERRORS
	LDA INPUT+7
	EOR I,0FF		;IT SHOULD NOW BE ZERO FOR NO SHORTED LOW BITS
	ORA INPUT+6
	ORA INPUT+8
	BEQ 15$			;EVERY THING IS FINE
	LDA I,10		;POKEY IS NOT GOOD
15$:	PHA
	JSR CHAR		;DISPLAY A "P0" IF POKEY 0 IS BAD ELSE BLANK
	PLA
	BEQ 16$			;IF A BLANK
	LDA I,20
16$:	JSR CHAR		;SECOND CHARACTER
	LDA I,PLYFLD+18&0FF
	STA TEMP4		;SET PLAYFIELD ADDRESS
	LDA INPUT+10.
	EOR I,0FF		;IT SHOULD BE ALL ONES
	ORA INPUT+9.
	ORA INPUT+11.
	BEQ 18$			;POKEY IS GOOD
	LDA I,10
18$:	PHA
	JSR CHAR		;DISPLAY BLANK OR "P1" FOR SECOND POKEY
	PLA
	BEQ 19$			;IF A BLANK
	LDA I,21
19$:	JSR CHAR		;SECOND CHARACTER


	.SBTTL	MOVE MOTION OBJECT
MOTION:	LDX STTMP3		;MOTION OBJECT
	LDY I,0
	LDA X,MOBJH
	CLC
	ADC TB
	STY TB			;CLEAR COUNTER
	STA X,MOBJH
	LDA X,MOBJV
	SEC
	SBC TB+1
	STY TB+1
	STA X,MOBJV		;UPDATE PLAYERS POSITION


	.SBTTL	process EAROM data
EAROMD:	JSR WRITEA		;READ EAROM
	JSR CKSUM
	STY EACKSM		;RESTORE OLD CHECKSUM
	BEQ 20$			;EAROM IS VALID
	PHA			;SAVE OLD DIFFERENCE
	LDA I,PLYFLD+1A&0FF
	STA TEMP4		;SET SCREEN POSITION FOR CHECKSUM ERROR
	LDA I,PLYFLD+1A/100
	STA TEMP4+1
	LDA I,5
	JSR CHAR		;DISPLAY "E"
	LDA I,1
	JSR CHAR		;DISPLAY "A"
	LDA I,0
	JSR CHAR		;BLANK
	PLA
	JSR DIGIT2		;DISPLAY DIFFERENCE
	JMP 50$			;CONTINUE SELF TEST

20$:	LDA I,PLYFLD+69/100	;SET POSITION FOR NUMBER OF PLAYS
	STA TEMP4+1
	LDA I,PLYFLD+69&0FF
	STA TEMP4
	SEC			;ZERO SUPPESS
	LDA EAGAMS+2
	JSR DIGIT2		;DISPLAY 2 DIGITS
	LDA EAGAMS+1
	JSR DIGIT2		;DISPLAY 2 DIGITS
	LDA EAGAMS
	CLC			;NO MORE ZERO SUPPRESSION
	JSR DIGIT2		;DISLAY LAST 2 DIGITS
	LDA I,ACC1&0FF
	STA TEMP5		;WRITE OUT "PLAYS" MESSAGE
	LDA I,ACC1/100
	STA TEMP5+1
	JSR MESSAG		;WRITE "PLAYS" AFTER NUMBER
	LDA I,PLYFLD+88/100
	STA TEMP4+1		;SET STARTING ADDRESS
	LDA I,PLYFLD+88&0FF
	STA TEMP4
	LDA TEMP2
	LSR
	LSR
	LSR
	LSR
	SED
	CLC
	ADC I,0			;0 TO 15 IN DECIMAL
	CLD			;LEAVE CARRY CLEAR FOR "DIGIT2"
	SEC			;ZERO SUPPRESSION
	JSR DIGIT2		;DISPLAY MINUTES
	LDA I,COLON
	JSR CHAR		;DISPLAY COLON
	LDA TEMP2
	AND I,0F
	SED
	CLC
	ADC I,0			;MAKE IT 0 TO 15
	STA TEMP2+1
	ADC TEMP2+1		;*4 TO MAKE IT REAL SECONDS
	STA TEMP2+1
	ADC TEMP2+1
	CLD
	CLC			;NO ZERO SUPPRESSION
	JSR DIGIT2		;DISPLAY SECONDS
	LDA I,ACC2&0FF
	STA TEMP5		;STORE ADDRESS OF MESSAGE
	LDA I,ACC2/100
	STA TEMP5+1
	JSR MESSAG		;DISPLAY "GAME TIME" MESSAGE
	LDA START1		;CHECK FOR ALL THREE SWITCHES DOWN
	AND I,30
	BNE 50$			;IF NOT ALL DOWN
	LDA START2
	AND I,20
	BNE 50$			;IF START 2 IS NOT DOWN
	LDA EACKSM
	EOR I,0FF
	STA EACKSM		;CHANGE CHECKSUM TO REMOVE DATA
	LDA I,EACKSM-EAROM
	STA ROMA		;WRITE THIS ONE BYTE IN EA ROM
	LDA I,0			;ERASE, WRITE AND READ NEW CHECKSUM
	STA ROMC
50$:	JMP SFTEST		;LOOP WHILE TEST SW IS ON


	.SBTTL	STCOLR - SET COLORS FOR PLAYFIELD AND MOTION OBJECTS
;
;ENTRY	(X)=COLOR TO BE USED
;	(Y)=INDEX FOR WHICH OF 3 TO SELECT (1,2,3)
;USES	X,Y
STCOLR:	TXA
	STA Y,ANCOL
	STA Y,MOCOL
	CLC
	ADC I,1
	STA Y,ANCOL+4		;EACH BANK USES DIFFERENT COLORS
	STA Y,MOCOL+4
	CLC
	ADC I,1
	STA Y,ANCOL+8
	STA Y,MOCOL+8
	CLC
	ADC I,1
	STA Y,ANCOL+0C
	STA Y,MOCOL+0C
	RTS


	.SBTTL	TBINIT=INITIALIZE TRACKBALLS
;
;ENTRY	(A)=VALUE FOR CONTROL SELECT
TBINIT:	STA CTRLSL		;SELECT DESIRED PLAYER
	LDA I,0
	STA TBEN		;DISABLE TRACKBALLS
	LDA OPTSW3		;SW5-SW7
	ASL
	ASL
	ASL
	ASL
	STA OPTNS2
	LDA OPTSW2		;SW1-SW4
	AND I,0F
	ORA OPTNS2
	STA OPTNS2		;SAVE THE OTHER 7 SWITCHES
	STA INPUT+2
	LDA I,-1
	STA TBEN		;ENABLE TRACKBALLS
	LDA TBALL
	STA OLDTB		;RESET COUNTERS
	LDA TBALL+1
	STA OLDTB+1
	RTS


COLORS:	.BYTE 0FF,0F8,0E7,01F	;START UP COLORS
	.BYTE 0FE,0F9,0EF,03F
	.BYTE 0FD,0FA,0F7,05F
	.BYTE 0FC,0FB,0FF,07F

BONUSC:	.BYTE 0,21,41,42	;COINS NEEDED FOR BONUS COIN(S)
	.BYTE 51,31,0,0
ACC1:	.ASCIN / PLAYS/		;ACCOUNTING MESSAGES
ACC2:	.ASCIN / GAME TIME/

DIE:	JMP DIE			;WAIT FOR WATCHDOG

CKSUM3:	.BYTE 08A		;CHECKSUM FOR FORTH 4K BLOCK

	.SBTTL VECTORS
	.WORD DIE,RESET,IRQ
	.REPT 1
	.VCTRS 0FFFC,RESET
	.VCTRS 0FFF8,IRQ	;DEVELOPMENT SYSTEM "UINT"
	.ENDR

	.END
                                               